Проект Афиша. Необходимо создать сервис по покупке билетов на культурные мероприятия (кино, театры, музеи).
Этап №1
1. Создание БД и схемы данных (самостоятельно определить что является primary key и foreign key). Сущность = таблица
1.0. Создать базу данных afisha
1.1. Создать скрипт генерирующий схему application
1.2. Создать скрипт генерирующий сущность тип события (event_type): id, name.
1.3. Создать скрипт добавляющий три типа событий в таблицу: museum, cinema, theather. (3 записи)
1.4. Создать скрипт генерирующий сущность место проведения (place): id, name, address, city
1.5. Создать скрипт генерирующий сущность событие (event): id, name, event_type_id, event_date (дата + время), place_id.
1.7. Создать скрипт герерирующий сущность билет (ticket): id, event_id, client_email, price, is_selled (продан)
1.8. Созданные скрипты положить в файл init.sql (пункты 1.1 - 1.7)

Этап №2
2. Создание проекта java и начало работы с бд
2.1 Создать spring boot проект (spring web, spring jdbc, postgresql driver, lombok, restassured) + проверка чекстайлом
2.2 Настроить подключение к бд
2.3 Создать профиль первичной инициализации(first). Для этого профиля появится сервис InitDatabaseService. Он должен будет запустить скрипт init.sql.
2.4 Создать классы описывающие сущности бд (entity)
2.5 Создать репозитории (для каждой сущности), которые позволят: сохранить новую сущность, получить сущность по id, получить все сущности.
ВНИМАНИЕ! Теперь репозиторий не хранит в себе никакие данные! Он отвечает только за взаимодействие с БД.

Этап №3
3. Создание бизнес логики
3.1 Создать сервис + контроллер, позволяющий заводить новые места проведения (на вход: наименования места, адрес, город) и получать список всех существующих мест проведений
3.2. Создать сервис + контроллер, позволяющий создавать события и выдывать существующие события. При создании события (передается цена, дата, имя события и место, тип события), должны генерироваться 100 билетов для кино, 50 билетов для театра (email не заполнен, билет не продан). Для музея билеты не генерятся. События + билеты должны создаваться одной транзакцией.
3.3. Создать сервис + контроллер, позволяющий покупать билет на определенное событие (на вход email). В логах выводить - билет куплен. Если покупается билет в музей, то создается новая запись. Если в театр или кино, то сначала проверить, что есть непроданный билет, и у этого непроданного билета поставить email и статус "продан". Если билетов нет, возвращать ошибку клиенту с http статусом Not Acceptable.
3.4. Создать сервис + контроллер, позволяющий получать отчет в разрезе: имя мероприятия, тип мероприятия, количество проданных билетов, сумма проданных билетов. Если по мероприятию не было продаж, то отображать для этого мероприятия - нулевое количество и сумму (ни одно мероприятие не должно пропасть).

Этап №4
4. Доведение до приличного состояния
4.1 Добавить сваггер.
4.2 Покрыть тестами слой контроллеров.